/**
 * This class is generated by jOOQ
 */
package uk.co.techblue.cgh.dnap.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked" })
public class SignalRecord extends org.jooq.impl.UpdatableRecordImpl<uk.co.techblue.cgh.dnap.tables.records.SignalRecord> implements org.jooq.Record16<java.lang.Long, java.lang.String, java.lang.String, java.lang.Double, java.lang.Double, java.lang.Double, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long>, uk.co.techblue.cgh.dnap.tables.interfaces.ISignal {

	private static final long serialVersionUID = 1493583746;

	/**
	 * Setter for <code>nhs-cgh.signal.SignalId</code>. 
	 */
	@Override
	public void setSignalid(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.SignalId</code>. 
	 */
	@Override
	public java.lang.Long getSignalid() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.ProbeName</code>. 
	 */
	@Override
	public void setProbename(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.ProbeName</code>. 
	 */
	@Override
	public java.lang.String getProbename() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.SystematicName</code>. 
	 */
	@Override
	public void setSystematicname(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.SystematicName</code>. 
	 */
	@Override
	public java.lang.String getSystematicname() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.LogRatio</code>. 
	 */
	@Override
	public void setLogratio(java.lang.Double value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.LogRatio</code>. 
	 */
	@Override
	public java.lang.Double getLogratio() {
		return (java.lang.Double) getValue(3);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.gProcessedSignal</code>. 
	 */
	@Override
	public void setGprocessedsignal(java.lang.Double value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.gProcessedSignal</code>. 
	 */
	@Override
	public java.lang.Double getGprocessedsignal() {
		return (java.lang.Double) getValue(4);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.rProcessedSignal</code>. 
	 */
	@Override
	public void setRprocessedsignal(java.lang.Double value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.rProcessedSignal</code>. 
	 */
	@Override
	public java.lang.Double getRprocessedsignal() {
		return (java.lang.Double) getValue(5);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.gIsSaturated</code>. 
	 */
	@Override
	public void setGissaturated(java.lang.Boolean value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.gIsSaturated</code>. 
	 */
	@Override
	public java.lang.Boolean getGissaturated() {
		return (java.lang.Boolean) getValue(6);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.rIsSaturated</code>. 
	 */
	@Override
	public void setRissaturated(java.lang.Boolean value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.rIsSaturated</code>. 
	 */
	@Override
	public java.lang.Boolean getRissaturated() {
		return (java.lang.Boolean) getValue(7);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.gIsFeatNonUnifOL</code>. 
	 */
	@Override
	public void setGisfeatnonunifol(java.lang.Boolean value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.gIsFeatNonUnifOL</code>. 
	 */
	@Override
	public java.lang.Boolean getGisfeatnonunifol() {
		return (java.lang.Boolean) getValue(8);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.rIsFeatNonUnifOL</code>. 
	 */
	@Override
	public void setRisfeatnonunifol(java.lang.Boolean value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.rIsFeatNonUnifOL</code>. 
	 */
	@Override
	public java.lang.Boolean getRisfeatnonunifol() {
		return (java.lang.Boolean) getValue(9);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.gIsBGNonUnifOL</code>. 
	 */
	@Override
	public void setGisbgnonunifol(java.lang.Boolean value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.gIsBGNonUnifOL</code>. 
	 */
	@Override
	public java.lang.Boolean getGisbgnonunifol() {
		return (java.lang.Boolean) getValue(10);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.rIsBGNonUnifOL</code>. 
	 */
	@Override
	public void setRisbgnonunifol(java.lang.Boolean value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.rIsBGNonUnifOL</code>. 
	 */
	@Override
	public java.lang.Boolean getRisbgnonunifol() {
		return (java.lang.Boolean) getValue(11);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.FeatureExtractor_barcode</code>. 
	 */
	@Override
	public void setFeatureextractorBarcode(java.lang.String value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.FeatureExtractor_barcode</code>. 
	 */
	@Override
	public java.lang.String getFeatureextractorBarcode() {
		return (java.lang.String) getValue(12);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.Chromosome</code>. 
	 */
	@Override
	public void setChromosome(java.lang.String value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.Chromosome</code>. 
	 */
	@Override
	public java.lang.String getChromosome() {
		return (java.lang.String) getValue(13);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.StartPosition</code>. 
	 */
	@Override
	public void setStartposition(java.lang.Long value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.StartPosition</code>. 
	 */
	@Override
	public java.lang.Long getStartposition() {
		return (java.lang.Long) getValue(14);
	}

	/**
	 * Setter for <code>nhs-cgh.signal.StopPosition</code>. 
	 */
	@Override
	public void setStopposition(java.lang.Long value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>nhs-cgh.signal.StopPosition</code>. 
	 */
	@Override
	public java.lang.Long getStopposition() {
		return (java.lang.Long) getValue(15);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record16 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row16<java.lang.Long, java.lang.String, java.lang.String, java.lang.Double, java.lang.Double, java.lang.Double, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long> fieldsRow() {
		return (org.jooq.Row16) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row16<java.lang.Long, java.lang.String, java.lang.String, java.lang.Double, java.lang.Double, java.lang.Double, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.Long, java.lang.Long> valuesRow() {
		return (org.jooq.Row16) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.SIGNALID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.PROBENAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.SYSTEMATICNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field4() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.LOGRATIO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field5() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.GPROCESSEDSIGNAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field6() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.RPROCESSEDSIGNAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field7() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.GISSATURATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field8() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.RISSATURATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field9() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.GISFEATNONUNIFOL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field10() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.RISFEATNONUNIFOL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field11() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.GISBGNONUNIFOL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field12() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.RISBGNONUNIFOL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field13() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.FEATUREEXTRACTOR_BARCODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field14() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.CHROMOSOME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field15() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.STARTPOSITION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field16() {
		return uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL.STOPPOSITION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getSignalid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getProbename();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getSystematicname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value4() {
		return getLogratio();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value5() {
		return getGprocessedsignal();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value6() {
		return getRprocessedsignal();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value7() {
		return getGissaturated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value8() {
		return getRissaturated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value9() {
		return getGisfeatnonunifol();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value10() {
		return getRisfeatnonunifol();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value11() {
		return getGisbgnonunifol();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value12() {
		return getRisbgnonunifol();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value13() {
		return getFeatureextractorBarcode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value14() {
		return getChromosome();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value15() {
		return getStartposition();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value16() {
		return getStopposition();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(uk.co.techblue.cgh.dnap.tables.interfaces.ISignal from) {
		setSignalid(from.getSignalid());
		setProbename(from.getProbename());
		setSystematicname(from.getSystematicname());
		setLogratio(from.getLogratio());
		setGprocessedsignal(from.getGprocessedsignal());
		setRprocessedsignal(from.getRprocessedsignal());
		setGissaturated(from.getGissaturated());
		setRissaturated(from.getRissaturated());
		setGisfeatnonunifol(from.getGisfeatnonunifol());
		setRisfeatnonunifol(from.getRisfeatnonunifol());
		setGisbgnonunifol(from.getGisbgnonunifol());
		setRisbgnonunifol(from.getRisbgnonunifol());
		setFeatureextractorBarcode(from.getFeatureextractorBarcode());
		setChromosome(from.getChromosome());
		setStartposition(from.getStartposition());
		setStopposition(from.getStopposition());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends uk.co.techblue.cgh.dnap.tables.interfaces.ISignal> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SignalRecord
	 */
	public SignalRecord() {
		super(uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL);
	}
}
