/**
 * This class is generated by jOOQ
 */
package uk.co.techblue.cgh.dnap.tables;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked" })
public class Signal extends org.jooq.impl.TableImpl<uk.co.techblue.cgh.dnap.tables.records.SignalRecord> {

	private static final long serialVersionUID = 518906428;

	/**
	 * The singleton instance of <code>cgh-processor.signal</code>
	 */
	public static final uk.co.techblue.cgh.dnap.tables.Signal SIGNAL = new uk.co.techblue.cgh.dnap.tables.Signal();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<uk.co.techblue.cgh.dnap.tables.records.SignalRecord> getRecordType() {
		return uk.co.techblue.cgh.dnap.tables.records.SignalRecord.class;
	}

	/**
	 * The column <code>cgh-processor.signal.SignalId</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Long> SIGNALID = createField("SignalId", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cgh-processor.signal.ProbeName</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.String> PROBENAME = createField("ProbeName", org.jooq.impl.SQLDataType.VARCHAR.length(30), this);

	/**
	 * The column <code>cgh-processor.signal.SystematicName</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.String> SYSTEMATICNAME = createField("SystematicName", org.jooq.impl.SQLDataType.VARCHAR.length(50), this);

	/**
	 * The column <code>cgh-processor.signal.LogRatio</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Double> LOGRATIO = createField("LogRatio", org.jooq.impl.SQLDataType.DOUBLE, this);

	/**
	 * The column <code>cgh-processor.signal.gProcessedSignal</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Double> GPROCESSEDSIGNAL = createField("gProcessedSignal", org.jooq.impl.SQLDataType.DOUBLE, this);

	/**
	 * The column <code>cgh-processor.signal.rProcessedSignal</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Double> RPROCESSEDSIGNAL = createField("rProcessedSignal", org.jooq.impl.SQLDataType.DOUBLE, this);

	/**
	 * The column <code>cgh-processor.signal.gIsSaturated</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Boolean> GISSATURATED = createField("gIsSaturated", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * The column <code>cgh-processor.signal.rIsSaturated</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Boolean> RISSATURATED = createField("rIsSaturated", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * The column <code>cgh-processor.signal.gIsFeatNonUnifOL</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Boolean> GISFEATNONUNIFOL = createField("gIsFeatNonUnifOL", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * The column <code>cgh-processor.signal.rIsFeatNonUnifOL</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Boolean> RISFEATNONUNIFOL = createField("rIsFeatNonUnifOL", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * The column <code>cgh-processor.signal.gIsBGNonUnifOL</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Boolean> GISBGNONUNIFOL = createField("gIsBGNonUnifOL", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * The column <code>cgh-processor.signal.rIsBGNonUnifOL</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Boolean> RISBGNONUNIFOL = createField("rIsBGNonUnifOL", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * The column <code>cgh-processor.signal.FeatureExtractor_barcode</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.String> FEATUREEXTRACTOR_BARCODE = createField("FeatureExtractor_barcode", org.jooq.impl.SQLDataType.VARCHAR.length(22), this);

	/**
	 * The column <code>cgh-processor.signal.Chromosome</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.String> CHROMOSOME = createField("Chromosome", org.jooq.impl.SQLDataType.VARCHAR.length(10), this);

	/**
	 * The column <code>cgh-processor.signal.StartPosition</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Long> STARTPOSITION = createField("StartPosition", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cgh-processor.signal.StopPosition</code>. 
	 */
	public final org.jooq.TableField<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Long> STOPPOSITION = createField("StopPosition", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * Create a <code>cgh-processor.signal</code> table reference
	 */
	public Signal() {
		super("signal", uk.co.techblue.cgh.dnap.CghProcessor.CGH_PROCESSOR);
	}

	/**
	 * Create an aliased <code>cgh-processor.signal</code> table reference
	 */
	public Signal(java.lang.String alias) {
		super(alias, uk.co.techblue.cgh.dnap.CghProcessor.CGH_PROCESSOR, uk.co.techblue.cgh.dnap.tables.Signal.SIGNAL);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<uk.co.techblue.cgh.dnap.tables.records.SignalRecord, java.lang.Long> getIdentity() {
		return uk.co.techblue.cgh.dnap.Keys.IDENTITY_SIGNAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<uk.co.techblue.cgh.dnap.tables.records.SignalRecord> getPrimaryKey() {
		return uk.co.techblue.cgh.dnap.Keys.KEY_SIGNAL_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<uk.co.techblue.cgh.dnap.tables.records.SignalRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<uk.co.techblue.cgh.dnap.tables.records.SignalRecord>>asList(uk.co.techblue.cgh.dnap.Keys.KEY_SIGNAL_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public uk.co.techblue.cgh.dnap.tables.Signal as(java.lang.String alias) {
		return new uk.co.techblue.cgh.dnap.tables.Signal(alias);
	}
}
