/**
 * This class is generated by jOOQ
 */
package uk.co.techblue.cgh.dnap.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked" })
public class DatabasechangeloglockRecord extends org.jooq.impl.UpdatableRecordImpl<uk.co.techblue.cgh.dnap.tables.records.DatabasechangeloglockRecord> implements org.jooq.Record4<java.lang.Integer, java.lang.Byte, java.sql.Timestamp, java.lang.String>, uk.co.techblue.cgh.dnap.tables.interfaces.IDatabasechangeloglock {

	private static final long serialVersionUID = -1282242691;

	/**
	 * Setter for <code>cgh-processor.DATABASECHANGELOGLOCK.ID</code>. 
	 */
	@Override
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cgh-processor.DATABASECHANGELOGLOCK.ID</code>. 
	 */
	@Override
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>cgh-processor.DATABASECHANGELOGLOCK.LOCKED</code>. 
	 */
	@Override
	public void setLocked(java.lang.Byte value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cgh-processor.DATABASECHANGELOGLOCK.LOCKED</code>. 
	 */
	@Override
	public java.lang.Byte getLocked() {
		return (java.lang.Byte) getValue(1);
	}

	/**
	 * Setter for <code>cgh-processor.DATABASECHANGELOGLOCK.LOCKGRANTED</code>. 
	 */
	@Override
	public void setLockgranted(java.sql.Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cgh-processor.DATABASECHANGELOGLOCK.LOCKGRANTED</code>. 
	 */
	@Override
	public java.sql.Timestamp getLockgranted() {
		return (java.sql.Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>cgh-processor.DATABASECHANGELOGLOCK.LOCKEDBY</code>. 
	 */
	@Override
	public void setLockedby(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cgh-processor.DATABASECHANGELOGLOCK.LOCKEDBY</code>. 
	 */
	@Override
	public java.lang.String getLockedby() {
		return (java.lang.String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.Byte, java.sql.Timestamp, java.lang.String> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.Byte, java.sql.Timestamp, java.lang.String> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return uk.co.techblue.cgh.dnap.tables.Databasechangeloglock.DATABASECHANGELOGLOCK.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field2() {
		return uk.co.techblue.cgh.dnap.tables.Databasechangeloglock.DATABASECHANGELOGLOCK.LOCKED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field3() {
		return uk.co.techblue.cgh.dnap.tables.Databasechangeloglock.DATABASECHANGELOGLOCK.LOCKGRANTED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return uk.co.techblue.cgh.dnap.tables.Databasechangeloglock.DATABASECHANGELOGLOCK.LOCKEDBY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value2() {
		return getLocked();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value3() {
		return getLockgranted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getLockedby();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(uk.co.techblue.cgh.dnap.tables.interfaces.IDatabasechangeloglock from) {
		setId(from.getId());
		setLocked(from.getLocked());
		setLockgranted(from.getLockgranted());
		setLockedby(from.getLockedby());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends uk.co.techblue.cgh.dnap.tables.interfaces.IDatabasechangeloglock> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DatabasechangeloglockRecord
	 */
	public DatabasechangeloglockRecord() {
		super(uk.co.techblue.cgh.dnap.tables.Databasechangeloglock.DATABASECHANGELOGLOCK);
	}
}
